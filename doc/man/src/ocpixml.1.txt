OCPIXML(1)
==========


NAME
----
ocpixml - command-line tool for managing artifact description XML in OpenCPI artifact files


SYNOPSIS
--------
*`ocpixml`* ['<options>'] '<verb>' '<artifact-file>'['<artifact-file>']


DESCRIPTION
-----------
The *`ocpixml(1)`* command-line tool is used to manage the artifact
description XML that exists inside an OpenCPI artifact
file generated by the *`ocpidev(1)`* *`build`* operation.
The artifact description XML describes the contents of
an executable binary (an artifact resulting from building
an RCC or HDL worker or a component unit test)
or a "bitstream" executable (an artifact resulting from
building an HDL assembly)
and is attached during the build process to the generated
executable or bitstream (*`.bitz`* or *`.gz`*) artifact file.
The *`ocpixml`* tool is used to manipulate
the artifact description XML attached to an artifact file.

VERBS
-----
The verbs supported by *`ocpixml`* are:

*`add`*::
    Add the artifact description XML from the named artifact
    file or *`stdin`* (indicated with a hyphen) to another
    named artifact file.

*`get`*::
    Extract the artifact description XML from the named
    artifact file to *`stdout`*.

*`strip`*::
    Remove the artifact description XML from the named
    artifact file and copy it to another named artifact file.

NOUNS
-----
None. 

OPTIONS
-------

*`--help`*, *`-h`*::
    Display usage information about the tool.

*`--log_level=`*'<level>', *`-l`* '<level>'::
    Set the OpenCPI log level to the specified level.
    This option can be used to override the logging
    level set in the *`OCPI_LOG_LEVEL`* environment
    variable. See ENVIRONMENT VARIABLES in
    link:opencpi.1.html[opencpi(1)] for a description
    of possible values.

EXAMPLES
--------
. Add the content of the artifact file named *`myartifact2.bitz`* to
the artifact file named *`myartifact1.bitz`*:
+
---------------------------------------------
ocpixml add myartifact2.bitz myartifact1.bitz
---------------------------------------------
+
. Add standard input to the artifact file named *`myartifact1.gz`*:
+
----------------------------
ocpixml add - myartifact1.gz
----------------------------
+
. Extract the XML metadata from the artifact file named *`myartifact1.bitz`*
and write it to *`stdout`*:
+
----------------------------
ocpixml get myartifact1.bitz
----------------------------
+
. Remove the XML metadata from the artifact file named *`myartifact1.gz`*
and copy the results to the artifact file named *`mynewartifact1.gz`*:
+
----------------------------------------------
ocpixml strip myartifact1.gz mynewartifact1.gz
----------------------------------------------


BUGS
----
See https://www.opencpi.org/report-defects


RESOURCES
---------
See the main web site: https://www.opencpi.org

SEE ALSO
--------
link:ocpidev-assembly.1.html[ocpidev-assembly(1)]
link:ocpidev-build.1.html[ocpidev-build(1)]
link:ocpidev-platform.1.html[ocpidev-platform(1)]
link:ocpidev-test.1.html[ocpidev-test(1)]
link:ocpidev-worker.1.html[ocpidev-worker(1)]

COPYING
-------
Copyright \(C) 2020 OpenCPI www.opencpi.org. OpenCPI is free software:
you can redistribute it and/or modify it under the terms of the
GNU Lesser General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your
option) any later version.
