.\"     Title: ocpidev-create
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 05/22/2020
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "OCPIDEV\-CREATE" "1" "05/22/2020" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ocpidev-create \- create OpenCPI assets
.SH "SYNOPSIS"
.sp
\fBocpidev\fR [\fI<options>\fR] \fBcreate\fR \fI<noun>\fR \fI<name>\fR
.SH "DESCRIPTION"
.sp
The \fBcreate\fR verb creates OpenCPI assets in a project specified by the \fI<noun>\fR argument that follows the verb\&.
.sp
Asset types to be specified in the \fI<noun>\fR argument are:
.PP
\fBproject\fR
.RS 4
Create a project which holds and organizes OpenCPI assets\&.
.RE
.PP
\fBregistry\fR
.RS 4
Create a registry that enables projects to depend on each other\&.
.RE
.PP
\fBapplication\fR
.RS 4
Create an application: XML or ACI as specified by options\&.
.RE
.PP
\fBspec\fR
.RS 4
Create a component specification in a library or project\&.
.RE
.PP
\fBprotocol\fR
.RS 4
Create a protocol in a library or project\&.
.RE
.PP
\fBtest\fR
.RS 4
Create a component unit test in a library\&.
.RE
.PP
\fBlibrary\fR
.RS 4
Create a component library\&.
.RE
.PP
\fBworker\fR
.RS 4
Create a worker in a library based on a component specification\&.
.RE
.PP
\fBhdl\fR
.RS 4
A prefix to indicate an HDL asset in the
\fBhdl\fR
subdirectory of a project\&. Possible HDL assets are:
.PP
\fBassembly\fR
.RS 4
Create an HDL assembly\&.
.RE
.PP
\fBcard\fR
.RS 4
Create an HDL card definition\&.
.RE
.PP
\fBslot\fR
.RS 4
Create an HDL slot definition\&.
.RE
.PP
\fBdevice\fR
.RS 4
Create an HDL device worker, possibly in a specified platform\&.
.RE
.PP
\fBplatform\fR
.RS 4
Create an HDL platform\&.
.RE
.PP
\fBprimitive\fR
.RS 4
Create an HDL primitive\&. Possible primitive types are:
.PP
\fBlibrary\fR
.RS 4
A set of HDL primitive modules to use in workers as a library\&.
.RE
.PP
\fBcore\fR
.RS 4
A single primitive module, perhaps presynthesized (that is, from coregen or megawizard)
.RE
.RE
.RE
.sp
All HDL assets should avoid having names that are Verilog or VHDL\- reserved identifiers, such as reg, etc\&.
.SH "OPTIONS"
.sp
The options for \fBcreate\fR are usually specific to the asset type that is being created\&. If creation fails, all partially\-created directories and/or files are removed unless the \fB\-k\fR option is specified\&.
.SS "Option When Creating Any Asset Type"
.PP
\fB\-k\fR
.RS 4
Keep files and directories created after an asset creation fails\&. Normally, all such files and directories are removed on any failure\&. This option takes no following argument and can only be specified once on the command line\&.
.RE
.SS "Options When Creating Projects"
.PP
\fB\-D\fR \fI<pkg\-ID>\fR
.RS 4
Specify the package\-ID of a project on which the project being created depends\&. This option can be specified more than once on the command line\&.
.RE
.PP
\fB\-\-register\fR
.RS 4
Register the project as part of creating it\&. This option takes no following argument and can only be specified once on the command line\&.
.RE
.SS "Options When Creating Projects or Libraries"
.PP
\fB\-N\fR \fI<pkg\-name>\fR
.RS 4
Specify the package name of the created project or library\&. The default is the
\fI<name>\fR
argument given after the
\fBcreate\fR
verb\&. This option can be specified only once on the command line\&.
.RE
.PP
\fB\-F\fR \fI<pkg\-prefix>\fR
.RS 4
Specify the package prefix of the created project or library\&. The default is
\fBlocal\fR
for projects and
\fI<package\-ID of parent>\fR
for libraries\&. This option can only appear once on the command\&.
.RE
.PP
\fB\-K\fR \fI<pkg\-ID>\fR
.RS 4
Specify the package\-ID directly\&. The default is
\fI<package\-prefix>\fR\fB\&.\fR\fI<package\-name>\fR\&. This option can only be specified once on the command line\&.
.RE
.SS "Options When Creating Projects, Libraries, Workers, HDL Devices or HDL Platforms"
.PP
\fB\-A\fR \fI<directory>\fR
.RS 4
Specify a directory to search for XML include files\&. This option can be specified more than once on the command line\&.
.RE
.PP
\fB\-y\fR \fI<component\-library>\fR
.RS 4
Specify a component library to search for workers, devices and/or specs that this asset (or assets it contains) references\&. This option can be specified more than once on the command line\&.
.RE
.PP
\fB\-I\fR \fI<directory>\fR
.RS 4
Specify a directory to search for include files (C, C++, Verilog)\&. This option can be specified more than once on the command line\&.
.RE
.PP
\fB\-Y\fR \fI<primitive\-library>\fR
.RS 4
Specify a primitive library on which the asset (or assets it contains) depends\&. This option can be specified more than once on the command line\&.
.RE
.SS "Options When Creating Specs"
.PP
\fB\-t\fR
.RS 4
Create the unit test for the spec as part of creating the spec\&. This option takes no following argument and can only be specified once on the command line\&.
.RE
.PP
\fB\-n\fR
.RS 4
Do not create a control interface for the spec\&. This option is rarely used or recommended\&. It is required for certain infrastructure specs and only applies to specs with only HDL implementations\&. This option takes no following argument and can only be specified once on the command line\&.
.RE
.SS "Option When Creating or Specs or Protocols"
.PP
\fB\-p\fR
.RS 4
Create the spec or protocol in the
\fBspecs\fR
directory of the project, not in a library\(cqs
\fBspecs\fR
directory\&. This option takes no following argument and can only be specified once on the command line\&.
.RE
.SS "Options When Creating Specs, Protocols, Workers or HDL Devices"
.PP
\fB\-l\fR \fI<library>\fR
.RS 4
Create the asset in the specified library\&. This option can only be specified once on the command line\&.
.RE
.PP
\fB\-\-hdl\-library\fR \fI<hdl\-library>\fR
.RS 4
Create the asset in the library under the
\fBhdl\fR
directory of the project\&. Valid values are only one of
\fBdevices\fR,
\fBcards\fR
or
\fBadapters\fR\&. This option can only be specified once on the command line\&.
.RE
.SS "Option When Creating Workers (All Types) and Tests"
.PP
\fB\-S\fR \fI<spec>\fR
.RS 4
Specify the spec to be implemented by the worker/test\&. The default is
\fI<name>\fR\fB\-spec\fR
or
\fI<name>\fR\fB_spec\fR
depending on what is found in the <specs> directory of the library or project (or libraries specified by the
\fB\-y\fR
option or other projects specified by the
\fB\-D\fR
option)\&. This option can only be specified once on the command line\&.
.RE
.SS "Options When Creating Workers (All Types)"
.PP
\fB\-L\fR \fI<language>\fR
.RS 4
Specify the source language for the worker being created\&. The default is the default language for the authoring model\&. It must be C or C++ for RCC workers and VHDL for HDL workers\&. This option can only be specified once on the command line\&.
.RE
.PP
\fB\-P\fR \fI<platform>\fR
.RS 4
Create the worker in the
\fBdevices\fR
library for the specified HDL platform (in this project)\&. This option can only be specified once on the command line\&.
.RE
.PP
\fB\-O\fR \fI<file>\fR
.RS 4
Specify a source code file that is not included by default (that is, in addition to the
\fI<worker>\fR\&.[c|cc|vhd] file) to be compiled when building the worker\&. This option can be specified more than once on the command line\&.
.RE
.SS "Options When Creating RCC Workers"
.PP
\fB\-V\fR \fI<slave\-worker>\fR
.RS 4
Create the RCC worker as a proxy for the specified slave worker\&. This option can only be specified once on the command line\&.
.RE
.PP
\fB\-W\fR \fI<worker>\fR
.RS 4
Specify one of multiple workers implemented in the RCC worker\(cqs directory when a single RCC worker directory is creating a multi\-worker artifact\&. This option is supported but is rarely required or recommended\&. This option can be specified more than once on the command line\&.
.RE
.PP
\fB\-R\fR \fI<prereq\-library>\fR
.RS 4
Specify a library on which the worker being created depends and to which it should be statically linked\&. This option can be specified more than once on the command line\&.
.RE
.PP
\fB\-r\fR \fI<prereq\-library>\fR
.RS 4
Specify a library on which the worker being created depends and to which it should be dynamically linked\&. This option can be specified more than once on the command line\&.
.RE
.SS "Option When Creating HDL Workers, Devices and Platforms"
.PP
\fB\-C\fR \fI<core>\fR
.RS 4
Specify an HDL primitive core on which the worker being created depends and with which it should be built\&. This option can be specified more than once on the command line\&.
.RE
.SS "Options When Creating HDL Devices"
.PP
\fB\-E\fR \fI<hdl\-device>\fR
.RS 4
Create the worker as an emulator worker and specify the HDL device worker associated with the device being emulated\&. This option can be specified more than once on the command line\&.
.RE
.PP
\fB\-U\fR \fI<hdl\-device>\fR
.RS 4
Create the worker as a subdevice and specify one of the HDL device workers that the subdevice supports\&. This option can be specified more than once on the command line\&.
.RE
.SS "Options When Creating HDL Platforms"
.PP
\fB\-g\fR \fI<part>\fR
.RS 4
Specify the part (die\-speed\-package;, e\&.g\&.,
\fBxc7z020\-1\-clg484\fR) for the HDL platform being created\&. This option can only be specified once on the command line\&.
.RE
.PP
\fB\-q\fR \fI<frequency>\fR
.RS 4
Specify the time server frequency for the platform\&. This option can only be specified once on the command line\&.
.RE
.PP
\fB\-u\fR
.RS 4
Specify that the platform being created does not support the scalable data plane (SDP)\&. This option is intended for legacy platforms and is not recommended for use\&. This option can only be specified once on the command line\&.
.RE
.SS "Options When Creating Any Buildable Asset"
.PP
\fB\-T\fR \fI<target>\fR
.RS 4
Only build the asset for the specified target\&. This option can be specified more than once on the command line\&.
.RE
.PP
\fB\-Z\fR \fI<target>\fR
.RS 4
Do not build the asset for the specified target\&. This option can be specified more than once on the command line\&.
.RE
.PP
\fB\-G\fR \fI<platform>\fR
.RS 4
Only build the asset for the specified platform\&. This option can be specified more than once on the command line\&.
.RE
.PP
\fB\-Q\fR \fI<platform>\fR
.RS 4
Do not build the asset for the specified platform\&. This option can be specified more than once on the command line\&.
.RE
.SS "Options When Creating HDL Primitive Libraries"
.PP
\fB\-H\fR
.RS 4
Specify that the HDL primitive library being created does not depend on any other primitive library\&. By default, HDL primitive libraries are assumed to depend on the built\-in primitive libraries (currently bsv, fixed_float, ocpi and util\&.) This option can only be specified once on the command line\&.
.RE
.PP
\fB\-J\fR
.RS 4
Specify that the HDL primitive library being created should not be elaborated when building, which results in a slight time savings at the cost of catching elaboration errors earlier in the build process\&. This option can only be specified once on the command line\&.
.RE
.SS "Options When Creating HDL Primitive Cores"
.PP
\fB\-M\fR \fI<module>\fR
.RS 4
Specify the name of the top module of the core\&. The default is the name of the core specified in the
\fI<name>\fR
argument after
\fBcreate\fR\&. This option can only be specified once on the command line\&.
.RE
.PP
\fB\-B\fR \fI<file>\fR
.RS 4
Create the HDL primitive core from the specified pre\-built (e\&.g\&., from corogen) core file (e\&.g\&., an
\fB\&.ngc\fR
or
\fB\&.qxp\fR
file)\&. This option can only be specified once on the command line\&.
.RE
.SS "Options When Creating Applications"
.PP
\fB\-X\fR
.RS 4
Create the application as an XML file in the
\fBapplications\fR
directory of the project\&. This option can only be specified once on the command line\&.
.RE
.PP
\fB\-x\fR
.RS 4
Specify that the application has its own directory but it will only be an XML file\&. The default creates an application with an ACI C++ file\&. This option cannot be used with the
\fB\-X\fR
option\&. This option can only be specified once on the command line\&.
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Create a project with name
\fBmy\-project\fR\&. This project\(cqs package\-ID will be
\fBlocal\&.my\-project\fR:
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev create project my\-project
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Create a project with package\-prefix
\fBorg\&.my_organization\fR
and name
\fBmy_project\fR\&. This project\(cqs package\-ID will be
\fBorg\&.my_organization\&.my_project\fR\&.
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev create project my\-project \-F org\&.my_organization
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Create a project registry
/workspace/my\-registry\&. Note that a new registry will not have a core project registered, so the next thing to do is locate and register a core project\&. Finally, use ocpidev set registry/workspace/my\-registry from within a project to tell that project to use the new registry\&. None of this is necessary if you are using the default project registry in the OpenCPI installation\&.
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev \-d ~/workspace create registry my\-registry
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
Create the default
\fBcomponents\fR
library for a project\&. If you provide a name other than
\fBcomponents\fR,
\fBocpidev\fR
creates it underneath the
\fBcomponents\fR
directory\&.
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev create library components
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
Create a component spec with the name
\fBmycomp\fR\&. It will be placed in the default location, which is
\fBcomponents/specs\fR\&. Use the
\fB\-l\fR
\fI<library\-name>\fR
option if there are sub\-libraries underneath
\fBcomponents\fR\&.
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev create spec mycomp
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}
Create an HDL worker named
\fBmyworker\fR
that implements the
\fBmycomp\fR
spec\&. If the worker is named
\fBmycomp\&.hdl\fR, you can omit the
\fB\-S mycomp\-spec\fR
option because the default spec is
\fI<worker\-name>\fR\fB\-spec\&.xml\fR\&.
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev create worker myworker\&.hdl \-S mycomp\-spec
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 7.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  7." 4.2
.\}
Create a C++ RCC worker named
\fBmycomp\fR
that implements the
\fBmycomp\fR
spec\&.
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev create worker myworker\&.rcc \-L c++
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 8.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  8." 4.2
.\}
Create an HDL assembly named
\fBmyassy\fR
that will only be used on the
\fBisim\fR
platform\&.
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev create hdl assembly myassy \-G isim
.fi
.if n \{\
.RE
.\}
.RE
.SH "BUGS"
.sp
See https://www\&.opencpi\&.org/report\-defects
.SH "RESOURCES"
.sp
See the main web site: https://www\&.opencpi\&.org
.SH "SEE ALSO"
.sp
ocpidev\-build(1) ocpidev\-clean(1) ocpidev\-delete(1) ocpidev\-refresh(1) ocpidev\-run(1) ocpidev\-show(1) ocpidev\-[un]register(1) ocpidev\-[un]set(1)
.SH "COPYING"
.sp
Copyright (C) 2020 OpenCPI www\&.opencpi\&.org\&. OpenCPI is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version\&.
