.\"     Title: ocpidev-component
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 07/14/2020
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "OCPIDEV\-COMPONENT" "1" "07/14/2020" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ocpidev-component \- manage an OpenCPI component\&.
.SH "SYNOPSIS"
.sp
\fBocpidev\fR [\fI<options>\fR] \fI<verb>\fR \fBcomponent\fR \fI<name>\fR
.SH "DESCRIPTION"
.sp
The \fBcomponent\fR noun represents an OpenCPI component, which is a defined function that has \fIproperties\fR that configure and control it and \fIports\fR where data messages are sent and received and which support \fIprotocols\fR that define the allowed/expected messages\&.
.sp
A component is described by an OpenCPI Component Specification (OCS), which is an XML file that defines the component\(cqs properties and ports and usually references one or more OpenCPI Protocol Specifications (OPS) in the port definitions\&. The OCS establishes the interface requirements for all worker implementations of the component in any authoring model\&. At present, a component consists of only the OCS XML file\&. For more information about a component\(cqs XML structure, see the chapter "Component Specifications" in the \fIOpenCPI Component Development Guide\fR\&.
.sp
In a project, a component resides in a \fBspecs/\fR directory located either in a component library or at the top level of a project and is named \fI<component\-name>\fR\fB\-spec\&.xml\fR\&. Note that components with an older naming format \fI<name>\fR\fB_spec\&.xml\fR also exist; for example, some of the components in the built\-in OpenCPI projects \fBassets\fR and \fBcore\fR\&.
.sp
In general, the workers that implement the component and any unit tests created for the component reside in the same library as the component, although a component\(cqs worker implementations can be created in different libraries or even different projects\&.
.sp
Verbs that can operate on a component are:
.PP
\fBcreate\fR
.RS 4
Create the named component according to the specified options, creating directories and files as required\&.
.RE
.PP
\fBdelete\fR
.RS 4
Remove all files associated with the named component\&.
.RE
.PP
\fBshow\fR
.RS 4
Display information associated with a component, such as its defined properties and ports\&.
.RE
.sp
The \fBocpidev\fR tool can also operate on a plural \fBcomponents\fR noun\&. The syntax is:
.sp
\fBocpidev\fR [\fI<options>\fR] \fBshow components\fR
.sp
where \fBshow\fR is the only valid verb and the options that can be specified are \fB\-d\fR \fI<directory>\fR and the \fBshow\fR verb options\&.
.SH "OPTIONS"
.sp
In the descriptions below, a plus sign (+) after the option indicates that it can be specified more than once on the command line\&.
.SS "Options That Apply to All Operations (Verbs) on Components"
.PP
\fB\-\-hdl\-library=\fR\fI<hdl\-library>\fR
.RS 4
Specify the HDL library in which to operate on the component\&. HDL libraries exist underneath the
\fBhdl/\fR
directory located at the top level of a project\&.
.RE
.PP
\fB\-\-library=\fR\fI<component\-library>\fR, \fB\-l\fR \fI<component\-library>\fR
.RS 4
Specify the component library in which to operate on the component\&. When a project contains multiple component libraries, this option can be used to specify one of them\&. Multiple component libraries are located underneath the
\fBcomponents\fR
directory at the top level of a project\&.
.RE
.PP
\fB\-d\fR \fI<directory>\fR
.RS 4
Specify the directory in which the command should be run\&. Analogous to the
\fB\-C\fR
option in the POSIX
\fBmake\fR
command\&.
.RE
.PP
\fB\-v, \-\-verbose\fR
.RS 4
Describe what is happening in command execution in more detail\&.
.RE
.SS "Options When Creating and Deleting Components"
.PP
\fB\-p\fR
.RS 4
Specify that the component is to be created in or deleted from the
\fBspecs\fR
directory of the project instead of the
\fBspecs\fR
directory of a component library\&. The
\fB\-l\fR
and
\fB\-p\fR
options specify the location of the component\&. When neither one of these options is used, the location is the
\fBcomponents\fR
library and thus is an error if other component libraries exist\&.
.RE
.SS "Options When Creating Components"
.PP
\fB\-k\fR
.RS 4
Keep files and directories created after a component creation fails\&. Normally, all such files and directories are removed on any failure\&.
.RE
.PP
\fB\-n\fR
.RS 4
Specify that the component has no control interface\&. This option is rarely used or recommended, but is required for certain infrastructure components\&. It applies only to components with HDL\-only implementations\&.
.RE
.SS "Options When Deleting Components"
.PP
\fB\-f\fR
.RS 4
Force deletion: do not ask for confirmation when deleting a component\&. Normally, you are asked to confirm a deletion\&.
.RE
.SS "Options When Showing Components"
.PP
\fB\-\-\fR\fBglobal\-scope\fR
.RS 4
Show components from all registered projects and the current project if applicable\&. This is the default scope used if
\fB\-local\-scope\fR
is not used\&.
.RE
.PP
\fB\-\-json\fR
.RS 4
Format the output in JavaScript Object Notation (JSON) format for integration with other software\&.
.RE
.PP
\fB\-\-local\-scope\fR
.RS 4
Only show components in the local project\&.
.RE
.PP
\fB\-\-simple\fR
.RS 4
Format the output as simply as possible\&.
.RE
.PP
\fB\-\-table\fR
.RS 4
Display the output in an easy\-to\-read table\&. This is the default display format used if
\fB\-\-simple\fR
or
\fB\-\-json\fR
are not used\&.
.RE
.PP
\fB\-P\fR \fI<hdl\-platform\-directory>\fR
.RS 4
Specify the HDL platform subdirectory in which to operate\&.
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Create a component spec with the name
\fBmycomp\fR\&. The component spec will be placed in the default location
\fBcomponents/specs/\fR:
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev create component mycomp
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Create a component named
\fBmycomp\fR
in the library named
\fBmyutilcomps\fR\&. The component spec will be placed in the
\fBspecs\fR
directory in
\fBmyutilcomps\fR
sublibrary within the
\fBcomponents\fR
library (\fBcomponents/myutilcomps/specs/\fR):
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev create component mycomp \-l myutilcomps
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
Delete a component named
\fBmydevcomp\fR
from the
\fBdevices\fR
library underneath the project\(cqs
\fBhdl\fR
library (deletes it from
\fBhdl/devices/specs/\fR):
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev delete component mydevcomp \-\-hdl\-library=devices
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 4.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  4." 4.2
.\}
Inside the
\fBassets\fR
project, display information about the component named
\fBcapture\fR
in the
\fBspecs\fR
directory of the
\fBbase_comps\fR
library in the
\fBcomponents\fR
library:
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev show component capture \-l components/base_comps
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 5.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  5." 4.2
.\}
Inside the
\fBassets\fR
project, display information about the component named
\fBqadc\fR
in the
\fBspecs\fR
directory of the
\fBdevices\fR
library in the
\fBhdl\fR
library:
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev show component qadc \-\-hdl\-library=devices
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 6.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  6." 4.2
.\}
Inside the
\fBassets\fR
project, display information about all components that are local to the
\fBassets\fR
project:
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev show components \-\-local\-scope
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 7.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  7." 4.2
.\}
Display information about all components local to the project
\fB/home/workspace/MyProject\fR:
.sp
.if n \{\
.RS 4
.\}
.nf
ocpidev show components \-\-local\-scope  \-d /home/workspace/MyProject
.fi
.if n \{\
.RE
.\}
.RE
.SH "BUGS"
.sp
See https://www\&.opencpi\&.org/report\-defects
.SH "RESOURCES"
.sp
See the main web site: https://www\&.opencpi\&.org
.SH "SEE ALSO"
.sp
ocpidev(1) ocpidev\-application(1) ocpidev\-create(1) ocpidev\-delete(1) ocpidev\-project(1) ocpidev\-protocol(1) ocpidev\-show(1) ocpidev\-test(1) ocpidev\-worker(1)
.SH "COPYING"
.sp
Copyright (C) 2020 OpenCPI www\&.opencpi\&.org\&. OpenCPI is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version\&.
