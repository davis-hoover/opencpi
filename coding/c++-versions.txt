We used to limit the codebase to what is supported in GNU G++ 4.4, which has
partial support for C++11, but not nullptr and a number of other things.
This corresponds to the default compiler for CentOS6, using the -std=c++0x flag.
Those wanting to port to even older systems (e.g. RHEL 5), must install and
build newer compilers on those systems (or cross-compile) or patch their own code.

Support for CentOS6 has been dropped: the oldest GCC version on supported
RCC development platforms is 4.8, which has full support for C++11.

Code under the runtime/ directory needs to be stricter and older than code under the tools/ directory.
The runtime/ code must be compilable for targeted embedded systems, possibly with old compilers.

Code under the tools/ directory may be allowed to use later versions of C++ since that code
does not have to be built or run on targeted (cross-compiled) systems.

At some point, we will make that distinction.  Currently, this means we allow
the tools/ code to use C++ corresponding to the default compiler supplied with
with Centos7 (4.8.5) as an "oldest development host compiler".
