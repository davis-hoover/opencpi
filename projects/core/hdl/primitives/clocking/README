PRELIMINARY
This library contains vendor specific clocking IP and vendor agnostic clocking based on phased-locked loops.

The clock_generator.vhd wraps the vendor specific IP and the vendor agnostic version of clock_generator.vhd 
implements something similar to the vendor IP.

Not all of the generics of clock_generator.vhd are used by the various implementations. 

Description of the generics for clock_generator.vhd:
CLK_PRIMITIVE - Used when a vendor has multiple clock primitives or versions for a part. For Xilinx
the appropriate values for this generic for the Zynq 7000 series are mmcme2 and plle2.
CLK_IN_FREQUENCY_MHz  - Input clock frequency in MHz
CLK_OUT_FREQUENCY_MHz - Output clock frequency in MHz
M - The multiply factor for a phase-locked loop
N - The divide factor for a phase-locked loop. Xilinx calls it D and Intel calls it N
O - For phase-locked loops with muitlple outputs, this is the output divide factor. Xilinx calls it O and Intel calls it C
CLK_OUT_DUTY_CYCLE - Duty cycle of output clock (used by vendor IP)

TODO:
Need to clean up the Makefile. The logic for calling the tcl script and generating the IP should probably be in a script
instead of the bash in the Makefile. Especially when more chips are supported. Also for Xilinx the IP, Vivado generates 
synthesizable code and simulation only code. Since there are different versions of the IP depending the chip/part series
and the simualation only code can only be generated by specifying what part you want to build for, the best course of action
is to just generate the IP for each chip series we support instead of generating the IP based on the hdl target. 
