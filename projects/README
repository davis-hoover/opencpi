This directory contains various built-in OpenCPI projects. These descriptions of some are from a high-level view.

core - This project contains the minimum project assets needed to experience OpenCPI, e.g. bias.test. It contains:
  * Components and Workers such as file_read and file_write as well as Framework internals
  * RCC (GPP) Platforms such as centos7 and xilinx13_3 (used by most Zynq-7000-based systems)
  * HDL Simulation Platforms such as modelsim and xsim
  Purposes:
  -- minimum content to enable basic heterogeneous development and execution, without any other projects
  -- minimum to enable a basic installation testing
  -- assets that are known to, and depended on by, OpenCPI tools (e.g. adapters)
  -- generally contain reusable software platforms and simulation platforms
  Fact:  this project is frequently changed in conjunction with framework code and tools

platform - This project is the tool kit for platform developers, and contains reference/example platforms and
           support for devices likely used by multiple platforms and cards.
  * specs/
     - component specs must facilitate generic device worker or platform support
  * hdl/primitives/
     - must directly support assets within hdl/devices, hdl/cards, or
       hdl/platforms, or be useful and used by devices in OSPs
  * hdl/devices/
     - generic device workers belong here
     - RF ADC/DAC command/control: device proxies must implement the latest
       generation dig_radio_ctrlr component
     - ADC/DAC data flow: de-interleaving/interleaving subdevice workers must
       support the latest generation ADC/DAC data flow paradigm workers
       data_src_qadc.hdl/data_sink_qdac.hdl
  * hdl/cards/
      - reusable card specs belong here
      - card-specific device workers for reusable cards belong here
  * hdl/platforms/
     - current reference/example platforms (relatively cheap and supported with high
       priority with as many software and hardware options as possible - e.g. zed,
       ultrascale/ZCU104, etc.)
     - note that non-reference platforms ("full-fledged OSPs") belong in
       separate OpenCPI project, sometimes for multiple related platforms and systems,
       and sometimes for single systems.

assets - This is the main library project provided by the OpenCPI maintainers, containing:
  * Example Applications, e.g. FSK modulation
  * Components and Workers partitioned into various libraries by type, e.g. dsp_comps
  * HDL Platforms such as Epiq's Matchstiq Z1 and Altera's Stratix 4 Development Board (ALST4)

tutorial - This project contains assets specifically designed for learning purposes
  * The tutorial documents reference and use these assets
  * Assets are typically simplified to facilitate learning
  * Assets are (or should be) added to demonstrate new features.

test - This project contains assets specifically designed for test purposes
  * These assets are not for examples or tutorial purposes and typically test edge conditions
  * This is where new tests should be added as development proceeds and bugs are fixed.
  (soon to be moved from tests/av-test to projects/test)

inactive - This project is the "catch-all" for anything not in the above projects.
  * This would include Platforms that are not officially supported (e.g. fedora25 or ML555)
  * Components that have not been fully vetted or are being retired, etc.
  * Inclusion within this project is neither an indication that something should be avoided nor
  that it is being promoted; it is simply not actively being maintained currently by the core OpenCPI team.
  * A key reason why "old" or "obsolete" assets are here are to still allow them to be built in order to
  guarantee backward compatiblity for deprecated, but still-supported interfaces.

osps - this is a directory where OSP projects are imported/mounted/downloaded/cloned as needed
  * OSPs live elsewhere, but are brought into the environment here.
  * the directory name under the osps directory is the package-id of the OSP.

clps - (future), this is the directory for component library projects, serving a function
       similar to OSPs.


