The source files below basically wrap the ZynqMP UltraScale+ PS to abstract away its low level interface.

1. zynq_ultra_ps.cpp_vhd:
   Our hand-written VHDL module with friendly record-oriented interfaces, based on AXI interface profiles in the
   axi primitive library.  It instances #2, parameterizes it for OpenCPI, and stubs out unused features.
   It has the component declaration as well as the instantiation of #2.  It is intended to be used for
   any platform based on a zynq ultrascale PS.
   It is preprocessed for one simple reason:  the actual name of $2 is a macro so that this file is not
   edited when xilinx updates the version of the #2 IP.

2. zynq_ultra_ps_e_v3_3_1_zynq_ultra_ps_e: (note that the version is in the name)
   A generated Verilog wrapper based on the latest version of the IP from Xilinx.
   It makes various width adaptations, and instances the ACTUAL PROCESSOR PRIMITIVE: PS8, #3
   It is basically extracted from its Xilinx IP directory using a tcl script.

3. PS8:
   The Xilinx primitive that represents the actual hardware PS.

zynq_ultra_pkg.vhd is just the component declaration for zynq_ultra_ps.

The Makefile is "clever" in performing two tasks:

1. Running the tcl script (shared with the zynq (not ultra) primitive) to extract the verilog wrapper.
   It does this not in a "make" recipe but in the first pass when the Makefile is read, because it is
   basically determining the name of a source file, and a parameter needed to compile the #1 file above.

2. Our VHDL PS module is run through the preprocessor to insert the name of the underlying verilog
   module.  We do this so that the verilog wrapper can be used as-is with no manual touching.


