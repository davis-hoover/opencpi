%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% this file was generated by docGen.py
% this file is intended to be edited
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section*{Summary - \Comp}
% Make table whose width is equal to which will be used for text
% wrapping, split into 2 equal columns
\begin{longtable}{|p{\dimexpr0.5\textwidth-2\tabcolsep\relax}
                  |p{\dimexpr0.5\textwidth-2\tabcolsep\relax}|}
  \hline
  \rowcolor{blue}
  & \\
  \hline
  Name              & \comp \\
  \hline
  Latest Version    &  \docVersion \\
  \hline
  Worker Type       &  Device\\
  \hline
  Component Library &  ocpi.assets.devices\\
  \hline
  Workers           &  data\_sink\_dac.hdl\\
  \hline
  Tested Platforms  &  xsim\\
  \hline
\end{longtable}

\section*{Functionality}
\begin{flushleft}
The \comp{} worker provides functionality common to all DAC device types, including
\begin{itemize}
	\item[1)] Interpret input messages indicating end of data and finish on EOF
	\item[2)] Normalize input data to bit width of device
	\item[3)] Provide underrun indicator when rate of input data is less than DAC data rate
\end{itemize}
It is intended to be paired with a device specific worker which translates the \textbf{dev} interface to a device specific interface.
\end{flushleft}

%\section*{Worker Implementation Details}
%\subsubsection*{\comp.hdl}
%\begin{flushleft}
%\end{flushleft}

%\section*{Theory}
%\begin{flushleft}
%\end{flushleft}

\section*{Block Diagrams}
\subsection*{Top level}
\begin{center}
	\begin{tikzpicture}[% List of styles applied to all, to override specify on a case-by-case
			every node/.style={
				align=center,  		% use this so that the "\\" for line break works
				minimum size=2cm	% creates space above and below text in rectangle
			},
			every edge/.style={draw,thick}
		]
		\node[rectangle,ultra thick,draw=black,fill=blue](R2){\Comp};
		\node[rectangle,draw=white,fill=white](R3)[left= of R2]{``in'' \\ WSI \\ Signed complex samples \\ with metadata};
		\node[rectangle,draw=white,fill=white](R4)[right= of R2]{``dev'' \\ Devsignal \\ Signed complex samples};
		\node[rectangle,draw=white,fill=white](R5)[above= of R2]{\verb+DAC_WIDTH_BITS, DAC_OUTPUT_IS_LSB_OF_IN_PORT+ \\ \verb+underrun_sticky_error, clr_underrun_sticky_error+};
		\path[->]
		(R3)edge []	node [] {} (R2)
		(R2)edge []	node [] {} (R4)
		(R2)edge []	node [] {} (R5)
		(R5)edge []	node [] {} (R2)
		;
	\end{tikzpicture}
\end{center}\pagebreak

%\subsection*{State Machine}
%\begin{flushleft}
%\end{flushleft}

\section*{Source Dependencies}
%\subsection*{\comp.rcc}
\subsection*{\comp.hdl}
\begin{itemize}
	\item assets/hdl/devices/\comp.hdl/\comp.vhd
	\item core/hdl/primitives/cdc/cdc\_pkg.vhd
	\item core/hdl/primitives/cdc/reset.vhd
	\item core/hdl/primitives/cdc/fast\_pulse\_to\_slow\_sticky.vhd
	\item core/hdl/primitives/cdc/single\_bit.vhd
	\item assets/hdl/primitives/misc\_prims/misc\_prims\_pkg.vhd
	\item assets/hdl/primitives/misc\_prims/misc\_prims\_body.vhd
	\item assets/hdl/primitives/misc\_prims/dac\_underrun\_detector.vhd
	\item assets/hdl/primitives/misc\_prims/data\_narrower.vhd
	\item assets/hdl/primitives/misc\_prims/ocpi\_pkg.vhd
\end{itemize}

\begin{landscape}
  \input{component_spec_properties.inc} % it is recommended to NOT remove this line

  \input{worker_properties.inc} % it is recommended to NOT remove this line

  \input{component_ports.inc} % it is recommended to NOT remove this line

  \input{worker_interfaces.inc} % it is recommended to NOT remove this line
\end{landscape}

\section*{Test and Verification}
\begin{flushleft}
For verification, the OpenCPI unit test framework which utilizes an emulator worker. The emulator worker produces clocks of varying frequency from 1e6 to 200e6 Hz which are forwarded to the \textbf{dev} port of the UUT. The unit test checks that the input file and output file match and that no expected underruns occurred during the test.
\end{flushleft}
