%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% this file was generated by docGen.py
% this file is intended to be edited
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section*{Summary - \Comp}
% Make table whose width is equal to which will be used for text
% wrapping, split into 2 equal columns
\begin{longtable}{|p{\dimexpr0.5\textwidth-2\tabcolsep\relax}
                  |p{\dimexpr0.5\textwidth-2\tabcolsep\relax}|}
  \hline
  \rowcolor{blue}
  & \\
  \hline
  Name              & \comp \\
  \hline
  Latest Version    & \docVersion \\
  \hline
  Worker Type       & Application                                                  \\
  \hline
  Component Library & ocpi.assets.util\_comps                                        \\
  \hline
  Workers           & \comp.hdl                                                    \\
  \hline
  Tested Platforms  & isim \\
  \hline
\end{longtable}

\section*{Functionality}
\begin{flushleft}
  The FIFO component passes complex signed samples (Q0.15 I, Q0.15 Q) from the input port through a First-In-First-Out (FIFO) buffer and onward to the output port. The depth, in number of complex samples, of the FIFO buffer is parameterized. This component includes a property-driven oneshot mode which, when enabled, allows the first FIFO depth number of samples to be sent to the output port and then discontinues data flow to the output port. After data flow is discontinued, the input port still ingests available samples, effectively operating as a data sink. This worker can also be parameterized to send a Zero-Length Message (ZLM) once data flow is discontinued.
\end{flushleft}

\section*{Worker Implementation Details}
\subsection*{\comp.hdl}
\begin{flushleft}
  In keeping with good data flow control practices, backpressure is transferred, when necessary, from the output port to the input port. Backpressure is never transferred when in oneshot mode and after the data flow is discontinued. Backpressure from the output port and forwardpressure from the input port are both alleviated by the FIFO buffer, with the degree of alleviation being directly proportional to the parameterized depth of the FIFO buffer (\verb+FIFO_DEPTH_p+).\medskip

  The input port's SOM, EOM, byte\_enable, and valid indicators are passed through the FIFO to the output port when data flow is allowed. Consequently, ZLMs will be passed through this worker. If operating in oneshot mode and data flow has been discontinued, the EOM will be set (i.e. logic value of 1 applied) on the same clock pulse as the last output sample.\medskip

  The \verb+ZLM_WHEN_ONESHOT_DONE_p+ parameter property, when having a value of true, forces the worker to send a single ZLM when in oneshot mode and data flow has been discontinued (i.e. when oneshot is 'done'). This is useful for allowing applications which use this worker to terminate once data flow is discontinued.
\end{flushleft}

%\section*{Theory}
%\begin{flushleft}
%\end{flushleft}

\section*{Block Diagrams}
\subsection*{Top level}
\begin{center}
  \begin{tikzpicture}[% List of styles applied to all, to override specify on a case-by-case
      every node/.style={
        align=center,     % use this so that the "\\" for line break works
        minimum size=2cm  % creates space above and below text in rectangle
      },
      every edge/.style={draw,thick}
    ]
    \node[rectangle,ultra thick,draw=black,fill=blue](R2){\Comp};
    \node[rectangle,draw=white,fill=white](R3)[left= of R2]{``in'' \\ iqstream\_protocol \\ (complex signed Q0.15 samples) };
    \node[rectangle,draw=white,fill=white](R4)[right= of R2]{``out'' \\ iqstream\_protocol \\ (complex signed Q0.15 samples) };
    \node[rectangle,draw=white,fill=white](R5)[above= of R2]{\verb+FIFO_DEPTH_p,+ \\ \verb+ZLM_WHEN_ONESHOT_DONE_p+};
    \path[->]
    (R3)edge [] node [] {} (R2)
    (R2)edge [] node [] {} (R4)
    (R2)edge [] node [] {} (R5)
    (R5)edge [] node [] {} (R2)
    ;
  \end{tikzpicture}
\end{center}\pagebreak

%\subsection*{State Machine}
%\begin{flushleft}
%\end{flushleft}

\section*{Source Dependencies}
%\subsection*{\comp.rcc}
\subsection*{\comp.hdl}
\begin{itemize}
  \item assets/components/util\_comps/fifo.hdl/fifo.vhd
  \item core/hdl/primitives/bsv/bsv\_pkg.vhd
  \item core/hdl/primitives/bsv/imports/SizedFIFO.v
\end{itemize}

\begin{landscape}
  \input{component_spec_properties.inc} % it is recommended to NOT remove this line

  \input{worker_properties.inc} % it is recommended to NOT remove this line

  \input{component_ports.inc} % it is recommended to NOT remove this line

  \input{worker_interfaces.inc} % it is recommended to NOT remove this line
\end{landscape}

\section*{Control Timing and Signals}
%\subsection*{\comp.hdl}
\begin{flushleft}
  The \Comp{} worker uses the clock from the Control Plane and standard Control Plane signals.
\end{flushleft}

\begin{landscape}
\section*{Worker Configuration Parameters}
%\subsubsection*{\comp.rcc}
\subsubsection*{\comp.hdl}
%\input{../../fifo.hdl/configurations.inc}
\section*{Performance and Resource Utilization}
\subsubsection*{\comp.hdl}
%\input{../../fifo.hdl/utilization.inc}
\end{landscape}

\section*{Test and Verification}
\begin{flushleft}
For verification, multiple test files are generated of varying lengths. Each test file is passed into the input port, and the output of the output port is saved to a file. The output file is compared against the input file to make sure they have the same binary contents and length. For the tests that use oneshot mode, the output file is only compared to the first min(input file size,8192) samples, with 8192 hardcoded to correspond to \verb+FIFO_DEPTH_p+.
\end{flushleft}
