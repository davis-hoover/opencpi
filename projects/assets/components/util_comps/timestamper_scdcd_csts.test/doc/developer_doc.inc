%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% this file was generated by docGen.py
% this file is intended to be edited
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{center}
\textit{\textbf{Revision History}}
  \begin{table}[H]
  \label{table:revisions} % Add "[H]" to force placement of table
    \begin{longtable}{|p{\dimexpr0.15\textwidth-2\tabcolsep\relax}
                      |p{\dimexpr0.75\textwidth-2\tabcolsep\relax}
                      |p{\dimexpr0.1\textwidth-2\tabcolsep\relax}|}
    \hline
    \rowcolor{blue}
    \textbf{Revision} & \textbf{Description of Change} & \textbf{Date} \\
    \hline
    v2.0 & Update doc and fix issues & 08/2020 \\
    \hline
    \end{longtable}
  \end{table}
\end{center}
\newpage

\def\name{\comp}
\def\workertype{Application}
\def\version{\ocpiversion}
\def\releasedate{09/2020}
\def\componentlibrary{ocpi.assets.util\_{}comps}
\def\workers{\comp{}.hdl}
\def\testedplatforms{ xsim (Vivado 2019.2) zed}
\input{\snippetpath/component_summary_table}
\section*{Summary - \Comp}

\section*{Functionality}
The timestamper\_scdcd component contains the properties and ports for facilitating timestamping of complex samples with separate control and data clock domains (hence the name "scdcd"). Note that the actual separation of the clock domain is enforced by the HDL OWD, and not the OCS.

\section*{Worker Implementation Details}
The timestamper\_scdcd.hdl worker has separate clock domains for the \verb+in+ port, \verb+out+ port, and control plane. The \verb+in+ and \verb+out+ ports are supplied with separate clocks from their connected workers.
Timestaping is done by sending ComplexShortTimedSample-prot time opcode messages whose fract\_sec and sec arguments contain the values provided by the fraction elements and seconds, respectively, of the \verb+time+ TimeInterface. The \verb+time+ TimeInterface is supplied with the \verb+in+ port's clock. Input messages with the time opcode are not passed through. Messages received on the input port with sample and discontiunity opcodes, along with the formed time messages, cross from the \verb+in+ clock domain to the \verb+out+ clock domain via an asynchronous FIFO, and are sent to the \verb+out+ port.



\noindent
\textbf{IMPORTANT:} As a reminder, the input messages with the time opcode are not passed through. 

%\section*{Theory}
%\begin{flushleft}
%\end{flushleft}

\section*{Block Diagrams}
\subsection*{Top level}
\begin{center}
	\begin{tikzpicture}[% List of styles applied to all, to override specify on a case-by-case
			every node/.style={
				align=center,  		% use this so that the "\\" for line break works
				minimum size=2cm	% creates space above and below text in rectangle
			},
			every edge/.style={draw,thick}
		]
		\node[rectangle,ultra thick,draw=black,fill=blue](R2){\Comp};
		\node[rectangle,draw=white,fill=white](R3)[left= of R2]{``in'' \\ complexshort timed sample};
		\node[rectangle,draw=white,fill=white](R4)[right= of R2]{``out'' \\ ComplexShortTimedSample-protocol\\ with time};
		\node[rectangle,draw=white,fill=white](R5)[above= of R2]{\verb+time+};
		\node[rectangle,draw=white,fill=white](R6)[below= of R2]{\verb+WTI+};
		\path[->]
		(R3)edge []	node [] {} (R2)
		(R2)edge []	node [] {} (R4)
		(R2)edge []	node [] {} (R5)
		(R5)edge []	node [] {} (R2)
		(R6)edge []	node [] {} (R2)
		;
	\end{tikzpicture}
\end{center}\pagebreak

%\subsection*{State Machine}
%\begin{flushleft}
%\end{flushleft}

\section*{Source Dependencies}
%\subsection*{\comp.rcc}
\subsection*{\comp.hdl}
\begin{itemize}
  \item projects/assets/components/util\_comps/timestamper\_scdcd\_csts.hdl/timestamper\_scdcd\_csts.vhd
  \item projects/assets/components/util\_comps/timestamper\_scdcd\_csts.hdl/cdc\_fifo\_complex\_short\_timed\_sample.vhd
  \item projects/assets/hdl/primitives/misc\_prims/misc\_prims\_pkg.vhd
  \item projects/assets/components/util\_comps/timestamper\_scdcd\_csts.hdl/timestamper\_scdcd\_csts\_pkg.vhd
  \item projects/assets/hdl/primitives/misc\_prims/misc\_prims\_body.vhd
  \item projects/assets/hdl/primitives/misc\_prims/level\_to\_pulse\_converter.vhd
  \item projects/core/hdl/primitives/cdc/cdc\_pkg.vhd
  \item projects/core/hdl/primitives/cdc/fifo.vhd
  \item projects/core/hdl/primitives/cdc/fast\_pulse\_to\_slow\_sticky.vhd
  \item projects/core/hdl/primitives/cdc/single\_bit.vhd
  \item projects/assets/components/misc\_comps/csts\_to\_iqstream.hdl/csts\_to\_iqstream.vhd
  \item projects/assets/components/misc\_comps/iqstream\_to\_cswm.hdl/iqstream\_to\_csts.vhd
  \item projects/core/hdl/primitives/util/util\_pkg.vhd
  \item projects/core/hdl/primitives/util/util\_body.vhd
  \item projects/core/hdl/primitives/ocpi/zlm\_detector.vhd
  \item projects/assets/components/util\_comps/timestamper\_scdcd\_csts.hdl/time\_downsampler.vhd
  \item projects/assets/components/util\_comps/timestamper\_scdcd\_csts.hdl/time\_corrector.vhd
  \item projects/assets/hdl/primitives/misc\_prims/advance\_counter.vhd
  \item projects/assets/hdl/primitives/misc\_prims/cdc\_pkg.vhd
  \item projects/assets/hdl/primitives/misc\_prims/cdc\_fifo\_info.vhd
  \item projects/core/hdl/primitives/util/set\_clr.vhd
  \item projects/core/hdl/primitives/protocol/message\_sizer.vhd
\end{itemize}

\begin{landscape}
  \input{component_spec_properties.inc} % it is recommended to NOT remove this line

  \input{worker_properties.inc} % it is recommended to NOT remove this line

  \input{component_ports.inc} % it is recommended to NOT remove this line

  \input{worker_interfaces.inc} % it is recommended to NOT remove this line
\end{landscape}

\section*{Control Timing and Signals}
%\subsection*{\comp.hdl}
\begin{flushleft}
The timestamper\_scdcd worker uses three sepearte clocks. The input and output ports use clocks that are seperate from the clocks of the workers they are connected to. The timestamper\_scdcd\_csts worker also uses a clock from the Control Plane for the previously mentioned worker and the WCI.
\noindent The timestamper\_scdcd\_csts worker uses standard control plane signals.
\end{flushleft}

\begin{landscape}
\section*{Worker Configuration Parameters}
%\subsubsection*{\comp.rcc}
\subsubsection*{\comp.hdl}

\section*{Performance and Resource Utilization}
%\subsubsection*{\comp.rcc}
\subsubsection*{\comp.hdl}
\end{landscape}

\section*{Test and Verification}
\begin{flushleft}
The test for the timestamper\_scdcd\_csts uses a ramp of 512 samples that is generated by the generate.py script. Multiple files are created with varying paramters. The first parameter,time correction, which can be -1,0, or 1. The second, mininum number of samples for each timestamp, can be 0,1,1024,4091,4092, or 4093. The last variable is forcing an error if there is an invalid time, which can be set to true or false. 


For verification, the output file is checked to see if SAMPLE, DISCONTINUITY and TIME messages were recieved. All possible opcodes are sent through the UUT, and then it is verified that the previously mentioned ones were recieved and pass. The test fails if there are 0 TIME/SAMPLE recieved and if any number other than 1 DISCONTINUITY message is recieved.
The output file is also compared to a positive ramp function for I values, and a negative ramp function for Q values.
\end{flushleft}
