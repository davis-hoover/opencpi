%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% this file was generated by docGen.py
% this file is intended to be edited
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section*{Summary - \Comp}
% Make table whose width is equal to which will be used for text
% wrapping, split into 2 equal columns
\begin{longtable}{|p{\dimexpr0.5\textwidth-2\tabcolsep\relax}
                  |p{\dimexpr0.5\textwidth-2\tabcolsep\relax}|}
  \hline
  \rowcolor{blue}
  & \\
  \hline
  Name              & \comp \\
  \hline
  Latest Version    & \docVersion  \\
  \hline
  Worker Type       & Application                                                                    \\
  \hline
  Component Library & ocpi.assets.misc\_comps \\
  \hline
  Workers           & \comp.hdl \\
  \hline
  Tested Platforms  & zed, matchstiq\_z1, e3xx, alst4, ml605, xsim \\
  \hline
\end{longtable}

\section*{Functionality}
\begin{flushleft}
\justify
  \Comp selects one \verb+DATA_BIT_WIDTH_p+ bits-wide data bus from multiple data generation sources, packs the \verb+DATA_BIT_WIDTH_p+ bits in bit-forward order in the least significant bits of the I data bus and bit-reverse order in the most significant bits of the Q data bus, and outputs that I/Q bus to the \verb+out+ port. The \verb+DATA_BIT_WIDTH_p+ bits-wide data sources are:
  \begin{itemize}
  \item a unsigned counter,
  \item a walking ones bus (e.g. b'100 \textrightarrow b'010 \textrightarrow b'001 \textrightarrow b'100 \textrightarrow etc),
  \item a Linear Feedback Shift Register (LFSR),
  \item and a property-driven fixed value.
  \end{itemize}
  The bitwidth common to all data source buses is parameterized. In the case that the data source bus width is less than the iqstream I/Q widths of 16 bits, the bus is packed into the most significant bits of I and Q. This aids in data alignment when this component is connected directly to a DAC device worker, which commonly takes the DAC bitwidth-most significant bits of I and Q from an iqstream input port for its data transmission. \\ \medskip
  This component includes a property-driven setting which can optionally disable the output port once a specified number of samples have been sent. This component can also be parameterized to send a Zero-Length Message (ZLM) once the output port is disabled.
\end{flushleft}

\section*{Worker Implementation Details}
\begin{flushleft}
\subsection*{\comp.hdl}
\justify
  In keeping with good data flow control practices, backpressure from the output port will suspend the advancement of each data generation source. The \verb+ZLM_WHEN_NUM_SAMPLES_REACHED_p+ parameter, when having a value of true, forces the worker to send a single ZLM when the output port has been disabled (i.e. when the \verb+num_samples+ property has a value of more than 1 and \verb+num_samples+ amount of samples have been sent out the output port). This is useful for allowing applications which use this worker to terminate once this worker's output port is disabled.
\end{flushleft}

%\section*{Theory}
%\begin{flushleft}
%\end{flushleft}

\section*{Block Diagrams}
\subsection*{\comp.hdl - Top level}
\begin{center}
  \begin{tikzpicture}[% List of styles applied to all, to override specify on a case-by-case
      every node/.style={
        align=center,     % use this so that the "\\" for line break works
        minimum size=2cm  % creates space above and below text in rectangle
      },
      every edge/.style={draw,thick}
    ]
    \node[rectangle,ultra thick,draw=black,fill=blue](R2){\verb+DATA_BIT_WIDTH_p,+ \\ \verb+LFSR_POLYNOMIAL_p,+ \\ \verb+LFSR_SEED_p,+ \\ \verb+ZLM_WHEN_NUM_SAMPLES_REACHED_p+, \\ \verb+ODATA_WIDTH_p+ \\ \\ \Comp \\ };
    \node[rectangle,draw=white,fill=white](R4)[right= of R2]{``out'' \\ iqstream\_protocol \\ (complex signed Q0.15 samples)};
    \node[rectangle,draw=white,fill=white](R5)[above= of R2]{\verb+LFSR_bit_reverse+, \\ \verb+mask_I,+ \\ \verb+mask_Q+};
    \path[->]
    (R2)edge [] node [] {} (R4)
    (R2)edge [] node [] {} (R5)
    (R5)edge [] node [] {} (R2)
    ;
  \end{tikzpicture}
\end{center}\pagebreak

%\subsection*{State Machine}
%\begin{flushleft}
%\end{flushleft}

\section*{Source Dependencies}
%\subsection*{\comp.rcc}
\subsection*{\comp.hdl}
\begin{itemize}
  \item assets/components/misc\_comps/\comp.hdl/\comp.vhd
  \item assets/components/misc\_comps/\comp.hdl/out\_port\_inject\_zlm.vhd
  \item assets/components/misc\_comps/\comp.hdl/set\_clr.vhd
  \item assets/primitives/misc\_prims/lfsr/src/lfsr.vhd
\end{itemize}


\begin{landscape}
  \input{component_spec_properties.inc} % it is recommended to NOT remove this line

  \input{worker_properties.inc} % it is recommended to NOT remove this line

  \input{component_ports.inc} % it is recommended to NOT remove this line

  \input{worker_interfaces.inc} % it is recommended to NOT remove this line
\end{landscape}

\section*{Control Timing and Signals}
\subsection*{\comp.hdl}
\begin{flushleft}
  The \Comp worker uses the clock from the Control Plane and standard Control Plane signals.
\end{flushleft}

\begin{landscape}
\section*{Worker Configuration Parameters}
\subsubsection*{\comp.hdl}
%\input{../../data_src.hdl/configurations.inc}
\section*{Performance and Resource Utilization}
%\subsubsection*{\comp.rcc}
\subsubsection*{\comp.hdl}
%\input{../../data_src.hdl/utilization.inc}
\end{landscape}

\section*{Test and Verification}
\begin{flushleft}
\justify
For verification, multiple test are run with varying values for the \verb+num_samples+ property for each of the available data source modes. The output file is checked for expected length and data contents, with the data content check being specific to the given data source mode.
\end{flushleft}
