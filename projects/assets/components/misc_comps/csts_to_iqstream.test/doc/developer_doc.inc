%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% this file was generated by docGen.py
% this file is intended to be edited
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{center}
\textit{\textbf{Revision History}}
  \begin{table}[H]
  \label{table:revisions} % Add "[H]" to force placement of table
    \begin{longtable}{|p{\dimexpr0.15\textwidth-2\tabcolsep\relax}
                      |p{\dimexpr0.75\textwidth-2\tabcolsep\relax}
                      |p{\dimexpr0.1\textwidth-2\tabcolsep\relax}|}
    \hline
    \rowcolor{blue}
    \textbf{Revision} & \textbf{Description of Change} & \textbf{Date} \\
    \hline
    v2.2 & Initial release & 04/2021 \\
    \hline
    \end{longtable}
  \end{table}
\end{center}
\newpage

\def\name{\comp}
\def\workertype{Application}
\def\version{\ocpiversion}
\def\releasedate{04/2021}
\def\componentlibrary{ocpi.assets.misc\_{}comps}
\def\workers{\comp{}.hdl}
\def\testedplatforms{CentOS7, xsim, Zed}
\input{\snippetpath/component_summary_table}
\section*{Summary - \Comp}

\section*{Functionality}
\begin{flushleft}
This component receives \verb+ComplexShortTimedSample+ protocol messages from the \verb+in+ port and converts them to \verb+iqstream+ protocol messages that are transmitted to the \verb+out+ port. The messages for all possible \verb+ComplexShortTimedSample+ opcodes are ingested, but only those with the \verb+sample+ opcode are converted and sent out the \verb+out+ port. This is due to the fact that \verb+ComplexShortTimedSample+ has not only a data-related opcode, but multiple non-data-related opcodes, and the \verb+iqstream+ protocol only has a single, data-related opcode. All \verb+out+ port messages use the \verb+iqstream+ protocol's \verb+iq+ opcode.
\end{flushleft}

%\section*{Worker Implementation Details}
%\begin{flushleft}
%\end{flushleft}

%\section*{Theory}
%\begin{flushleft}
%\end{flushleft}

%\section*{Block Diagrams}
%\subsection*{Top level}
%\begin{center}
%\end{center}\pagebreak

%\subsection*{State Machine}
%\begin{flushleft}
%\end{flushleft}

\section*{Source Dependencies}
\subsection*{csts\_to\_iqstream.hdl}
\begin{itemize}
        \item core/hdl/primitives/util/reset\_detector.vhd
	\item core/hdl/primitives/protocol/iqstream\_body.vhd
	\item core/hdl/primitives/protocol/iqstream\_pkg.vhd
	\item core/hdl/primitives/protocol/message\_sizer.vhd
	\item core/hdl/primitives/timed\_sample\_prot/complex\_short\_timed\_sample\_body.vhd
	\item core/hdl/primitives/timed\_sample\_prot/complex\_short\_timed\_sample\_package.vhd
	\item core/hdl/primitives/timed\_sample\_prot/complex\_short\_timed\_sample\_demarshaller.vhd
	\item core/hdl/primitives/protocol/iqstream\_marshaller.vhd
	\item assets/components/misc\_comps/csts\_to\_iqstream.hdl/csts\_to\_iqstream.vhd
\end{itemize}

\begin{landscape}
  \input{component_spec_properties.inc} % it is recommended to NOT remove this line

  \input{worker_properties.inc} % it is recommended to NOT remove this line

  \input{component_ports.inc} % it is recommended to NOT remove this line

  \input{worker_interfaces.inc} % it is recommended to NOT remove this line
\end{landscape}

%\section*{Control Timing and Signals}
%\subsection*{\comp.hdl}
%\begin{flushleft}
%\end{flushleft}

%\section*{Performance and Resource Utilization}
%\subsubsection*{\comp.rcc}
%\subsubsection*{\comp.hdl}

\section*{Test and Verification}
The Unit Under Test (UUT) is tested by a) generating a file containing protocol-formatted messages which are sent to the UUT via the \verb+file_read+ component, b) using the \verb+file_write+ component to save the file containing the UUT's output as protocol-formatted message, and c) verifying the contents of the output file. The generated file contains one or more \verb+ComplexShortTimedSample+ \verb+samples+ messages following followed by a message for each of the non-\verb+sample+ opcodes. The sequence of \verb+samples+ messages include samples whose I (Real) and Q (imaginary) signals are positive and negative ramp functions, respectively. The output file is verified by confirming that a) the same number of samples exists in the input and output files, and b) the output file contains the same ramp functions as the input.

\section*{Block Diagram}
\input{bd.inc}
