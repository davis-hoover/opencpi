--- mmcm_100_to_100_50_and_25.v	2020-04-21 18:38:27.720903741 -0400
+++ mmcm_100_to_100_50_and_25_modified.v	2020-04-06 16:39:28.328943000 -0400
@@ -1,13 +1,13 @@
 
 // file: mmcm_100_to_100_50_and_25.v
-// 
+//
 // (c) Copyright 2008 - 2013 Xilinx, Inc. All rights reserved.
-// 
+//
 // This file contains confidential and proprietary information
 // of Xilinx, Inc. and is protected under U.S. and
 // international copyright and other intellectual property
 // laws.
-// 
+//
 // DISCLAIMER
 // This disclaimer is not a license and does not grant any
 // rights to the materials distributed herewith. Except as
@@ -29,7 +29,7 @@
 // by a third party) even if such damage or loss was
 // reasonably foreseeable or Xilinx had been advised of the
 // possibility of the same.
-// 
+//
 // CRITICAL APPLICATIONS
 // Xilinx products are not designed or intended to be fail-
 // safe, or for use in any application requiring fail-safe
@@ -43,10 +43,10 @@
 // liability of any use of Xilinx products in Critical
 // Applications, subject only to applicable laws and
 // regulations governing limitations on product liability.
-// 
+//
 // THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
 // PART OF THIS FILE AT ALL TIMES.
-// 
+//
 //----------------------------------------------------------------------------
 // User entered comments
 //----------------------------------------------------------------------------
@@ -57,19 +57,21 @@
 //   Clock     Freq (MHz)  (degrees)    (%)     Jitter (ps)  Error (ps)
 //----------------------------------------------------------------------------
 // clk_out1___100.000______0.000______50.0______130.958_____98.575
+// clk_out2____50.000______0.000______50.0______151.636_____98.575
+// clk_out3____25.000______0.000______50.0______175.402_____98.575
 //
 //----------------------------------------------------------------------------
 // Input Clock   Freq (MHz)    Input Jitter (UI)
 //----------------------------------------------------------------------------
 // __primary_________100.000____________0.010
 
-`timescale 1ps/1ps
-
-module mmcm_100_to_100_50_and_25_clk_wiz 
+module mmcm_100_to_100_50_and_25
 
  (// Clock in ports
   // Clock out ports
   output        clk_out1,
+  output        clk_out2,
+  output        clk_out3,
   // Status and control signals
   input         reset,
   output        locked,
@@ -106,14 +108,12 @@
   wire        clkfbout_mmcm_100_to_100_50_and_25;
   wire        clkfbout_buf_mmcm_100_to_100_50_and_25;
   wire        clkfboutb_unused;
-    wire clkout0b_unused;
-   wire clkout1_unused;
-   wire clkout1b_unused;
-   wire clkout2_unused;
-   wire clkout2b_unused;
-   wire clkout3_unused;
-   wire clkout3b_unused;
-   wire clkout4_unused;
+  wire clkout0b_unused;
+  wire clkout1b_unused;
+  wire clkout2b_unused;
+  wire clkout3_unused;
+  wire clkout3b_unused;
+  wire clkout4_unused;
   wire        clkout5_unused;
   wire        clkout6_unused;
   wire        clkfbstopped_unused;
@@ -133,6 +133,14 @@
     .CLKOUT0_PHASE        (0.000),
     .CLKOUT0_DUTY_CYCLE   (0.500),
     .CLKOUT0_USE_FINE_PS  ("FALSE"),
+    .CLKOUT1_DIVIDE       (20),
+    .CLKOUT1_PHASE        (0.000),
+    .CLKOUT1_DUTY_CYCLE   (0.500),
+    .CLKOUT1_USE_FINE_PS  ("FALSE"),
+    .CLKOUT2_DIVIDE       (40),
+    .CLKOUT2_PHASE        (0.000),
+    .CLKOUT2_DUTY_CYCLE   (0.500),
+    .CLKOUT2_USE_FINE_PS  ("FALSE"),
     .CLKIN1_PERIOD        (10.000))
   mmcm_adv_inst
     // Output clocks
@@ -141,9 +149,9 @@
     .CLKFBOUTB           (clkfboutb_unused),
     .CLKOUT0             (clk_out1_mmcm_100_to_100_50_and_25),
     .CLKOUT0B            (clkout0b_unused),
-    .CLKOUT1             (clkout1_unused),
+    .CLKOUT1             (clk_out2_mmcm_100_to_100_50_and_25),
     .CLKOUT1B            (clkout1b_unused),
-    .CLKOUT2             (clkout2_unused),
+    .CLKOUT2             (clk_out3_mmcm_100_to_100_50_and_25),
     .CLKOUT2B            (clkout2b_unused),
     .CLKOUT3             (clkout3_unused),
     .CLKOUT3B            (clkout3b_unused),
@@ -175,7 +183,7 @@
     .CLKFBSTOPPED        (clkfbstopped_unused),
     .PWRDWN              (1'b0),
     .RST                 (reset_high));
-  assign reset_high = reset; 
+  assign reset_high = reset;
 
   assign locked = locked_int;
 // Clock Monitor clock assigning
@@ -194,6 +202,14 @@
     .I   (clk_out1_mmcm_100_to_100_50_and_25));
 
 
+  BUFG clkout2_buf
+   (.O   (clk_out2),
+    .I   (clk_out2_mmcm_100_to_100_50_and_25));
+
+  BUFG clkout3_buf
+   (.O   (clk_out3),
+    .I   (clk_out3_mmcm_100_to_100_50_and_25));
+
 
 
 endmodule
