#!/bin/bash
# This file is protected by Copyright. Please refer to the COPYRIGHT file
# distributed with this source distribution.
#
# This file is part of OpenCPI <http://www.opencpi.org>
#
# OpenCPI is free software: you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# OpenCPI is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

function help {
  cat <<EOF

The ocpiview command is a convenience script for viewing simulation results.
--------------------------------------------------------------------------------
usage: ocpiview [-h|-v] [<directory-path>]

Execute in a directory containing either a simulation run, or a "simulations"
folder (where the most recent run will be selected).

Optionally pass in the <directory-path>.

EOF
  exit 0
}

# Let's catch the normal help options:
# ocpiview -h         "$1" == -h
# ocpiview -help      "$1" == -help
# ocpiview --help     "$1" == --help
# ocpiview -?         "$1" == -?

[ "$1" == -h -o "$1" == -help -o "$1" == --help -o "$1" == -? ] && help

source $OCPI_CDK_DIR/scripts/util.sh

# Just to clear the positional parameters
function do_source {
    local f=$1
    shift
    source $f
}

if test "$1" = "-v"; then
  verbose=1
  shift
fi

if test "$1" != ""; then
  if [ -d "$1" ]; then
    cd $1
  else
    echo This is not a directory: "$1"
    exit 1
  fi
fi

if test -f isim.wdb; then
  setVarsFromMake $OCPI_CDK_DIR/include/hdl/xilinx.mk ShellIseVars=1 $verbose
  [ -z "$OcpiXilinxIseDir" -o -z "$OcpiXilinxLicenseFile" ] && {
    echo Could not find the Xilinx ISE tools directory or license file. >&2
    exit 1
  }
  set -e
  do_source $OcpiXilinxIseDir/settings64.sh > /dev/null
  export LM_LICENSE_FILE=$OcpiXilinxLicenseFile
  exec isimgui -view isim.wdb
elif test -f vsim.wlf; then
  export LM_LICENSE_FILE=$OCPI_MODELSIM_LICENSE_FILE
  exec $OCPI_MODELSIM_DIR/bin/vsim -view vsim.wlf
elif test -f xsim.wdb; then
  setVarsFromMake $OCPI_CDK_DIR/include/hdl/xilinx.mk ShellIseVars=1 $verbose
  [ -z "$OcpiXilinxVivadoDir" ] && {
    echo Could not find the Xilinx Vivado tools directory or license file. >&2
    exit 1
  }
  [ -z "$OcpiXilinxLicenseFile" ] && echo Warning: No Xilinx license file found, which is ok if this is a Vivado WebPack license. >&2 || :
  set -e
  . $OcpiXilinxVivadoDir/.settings64-Vivado.sh > /dev/null
  export LM_LICENSE_FILE=$OcpiXilinxLicenseFile
  # Do NOT want to open xsim.wdb right away. First we open the xsim TCL console by opening
  # a session with the OTHER WDB file. Then we use the open_wave_database TCL command
  # in view.tcl to open the correct Wave Database file.
  exec xsim -gui $(echo *_x*sim_*.wdb | cut -f 1 -d '.') -tclbatch view.tcl
elif test -f dataset.asdb; then
  export ALDEC_LICENSE_FILE=$OCPI_RIVIERA_LICENSE_FILE
  exec $OCPI_RIVIERA_DIR/bin/riviera -do ocpiview.do
else
  files=(`shopt -s nullglob; echo *.*sim.20*[0-9]`)
  nfiles=${#files[@]}
  if test $nfiles == 0; then
    if [ -d simulations ]; then
      exec bash $0 simulations
    fi
    echo No simulation files \(xsim.wdb, isim.wdb, dataset.asdb or vsim.wlf\) nor simulation directories \(*.*sim.\<date\>\) found.
    exit 1
  fi
  files=(`ls -dtr ${files[*]}`)
  nfiles=${#files[@]}
  last=${files[$nfiles-1]}
  if test -f $last/isim.wdb -o -f $last/vsim.wlf -o -f $last/dataset.asdb -o -f $last/xsim.wdb; then
    exec bash $0 $last
  fi
  echo Although a simulation directory was found \($last\), no sim files were found \($last /xsim.wdb or $last/isim.wdb or $last/dataset.asdb or $last/vsim.wlf\)
  exit 1
fi
