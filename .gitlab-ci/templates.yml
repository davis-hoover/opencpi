#################
# Jobs - Prereq #
#################
.install-packages:
  stage: prereq
  script:
    - yum -y distro-sync
    - ./scripts/install-packages.sh

.install-prereqs:
  extends:
    - .standard-artifacts
  stage: prereq
  script:
    - ./scripts/install-prerequisites.sh $PLATFORM


################
# Jobs - Build #
################
.build-opencpi:
  extends:
    - .standard-artifacts
  stage: build
  script:
    - ./scripts/build-opencpi.sh $PLATFORM

.build-rcc:
  extends:
    - .build-opencpi
  stage: build-rcc


################################
# Jobs - Build-Primitives-Core #
################################
.build-primitives-core:
  extends:
    - .standard-artifacts
  stage: build-primitives-core
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/core/hdl/primitives --hdl-platform $PLATFORM


##################################
# Jobs - Build-Primitives-Assets #
##################################
.build-primitives-assets:
  extends:
    - .standard-artifacts
  stage: build-primitives-assets
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/hdl/primitives --hdl-platform $PLATFORM


####################################
# Jobs - Build-Primitives-Inactive #
####################################
.build-primitives-inactive:
  extends:
    - .standard-artifacts
  stage: build-primitives-inactive
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/inactive/hdl/primitives --hdl-platform $PLATFORM


###########################
# Jobs - Build-Components #
###########################
.build-components-core:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/core/components --hdl-platform $PLATFORM

.build-components-assets:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/components --hdl-platform $PLATFORM

.build-components-assets-base:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/components/base_comps --hdl-platform $PLATFORM

.build-components-assets-comms:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/components/comms_comps --hdl-platform $PLATFORM

.build-components-assets-dsp:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/components/dsp_comps --hdl-platform $PLATFORM

.build-components-assets-misc:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/components/misc_comps --hdl-platform $PLATFORM

.build-components-assets-util:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/components/util_comps --hdl-platform $PLATFORM

.build-components-assets_ts:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets_ts/components --hdl-platform $PLATFORM

.build-components-inactive:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/inactive/components --hdl-platform $PLATFORM


########################
# Jobs - Build-Devices #
########################
.build-devices-core:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/core/hdl/devices --hdl-platform $PLATFORM

.build-devices-assets:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/hdl/devices --hdl-platform $PLATFORM

.build-devices-assets_ts:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets_ts/hdl/devices --hdl-platform $PLATFORM

.build-devices-inactive:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/inactive/hdl/devices --hdl-platform $PLATFORM


#########################
# Jobs - Build-Adapters #
#########################
.build-adapters-core:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/core/hdl/adapters --hdl-platform $PLATFORM

.build-adapters-assets:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/hdl/adapters --hdl-platform $PLATFORM


######################
# Jobs - Build-Cards #
######################
.build-cards-core:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/core/hdl/cards --hdl-platform $PLATFORM

.build-cards-assets:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/hdl/cards --hdl-platform $PLATFORM

.build-cards-inactive:
  extends:
    - .standard-artifacts
  stage: build-workers
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/inactive/hdl/cards --hdl-platform $PLATFORM


##########################
# Jobs - Build-Platforms #
##########################
.build-platforms:
  after_script:
    - find -not -type d -newerct "$(< timestamp.txt)" > artifacts-$CI_JOB_STAGE-$CI_JOB_ID.txt
    - tar -T artifacts-$CI_JOB_STAGE-$CI_JOB_ID.txt -cf artifacts-$CI_JOB_STAGE-$CI_JOB_ID.tar
    - ls -lh artifacts-$CI_JOB_STAGE-$CI_JOB_ID.tar
    - for f in artifacts-build-workers-*.tar; do tar --concatenate -f artifacts-$CI_JOB_STAGE-$CI_JOB_ID.tar $f; done;
    - ls -lh artifacts-$CI_JOB_STAGE-$CI_JOB_ID.tar
    - for f in artifacts*.tar; do if [ "$f" != artifacts-$CI_JOB_STAGE-$CI_JOB_ID.tar ]; then rm -rf "$f";  fi ; done

.build-platforms-core:
  extends:
    - .standard-artifacts
    - .build-platforms
  stage: build-platforms
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build hdl platforms -d projects/core --hdl-platform $PLATFORM

.build-platforms-assets:
  extends:
    - .standard-artifacts
    - .build-platforms
  stage: build-platforms
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build hdl platforms -d projects/assets --hdl-platform $PLATFORM

.build-platforms-inactive:
  extends:
    - .standard-artifacts
    - .build-platforms
  stage: build-platforms
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build hdl platforms -d projects/inactive --hdl-platform $PLATFORM


###########################
# Jobs - Build-Assemblies #
###########################
.build-assemblies-assets:
  extends:
    - .standard-artifacts
  stage: build-assemblies
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets/hdl/assemblies --hdl-platform $PLATFORM

.build-assemblies-assets_ts:
  extends:
    - .standard-artifacts
  stage: build-assemblies
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/assets_ts/hdl/assemblies --hdl-platform $PLATFORM

.build-assemblies-inactive:
  extends:
    - .standard-artifacts
  stage: build-assemblies
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build -d projects/inactive/hdl/assemblies --hdl-platform $PLATFORM


###############
# Jobs - Test #
###############
.test-opencpi:
  stage: test
  artifacts:
    paths: []
  script:
    - ./scripts/test-opencpi.sh --no-hdl

.test-core:
  stage: test
  artifacts:
    paths: []
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build test -d projects/core --$MODEL-platform $PLATFORM
    - >
      if [[ -z $IP ]]; then
        ocpidev run tests -d projects/core --only-platform $PLATFORM --mode prep_run_verify;
      fi

.test-assets-base:
  stage: test
  artifacts:
    paths: []
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build test -d projects/assets/components/base_comps --$MODEL-platform $PLATFORM
    - >
      if [[ -z $IP ]]; then
        ocpidev run tests -d projects/assets/components/base_comps --only-platform $PLATFORM --mode prep_run_verify;
      fi

.test-assets-comms:
  stage: test
  artifacts:
    paths: []
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build test -d projects/assets/components/comms_comps --$MODEL-platform $PLATFORM
    - >
      if [[ -z $IP ]]; then
        ocpidev run tests -d projects/assets/components/comms_comps --only-platform $PLATFORM --mode prep_run_verify;
      fi

.test-assets-dsp:
  stage: test
  artifacts:
    paths: []
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build test -d projects/assets/components/dsp_comps --$MODEL-platform $PLATFORM
    - >
      if [[ -z $IP ]]; then
        ocpidev run tests -d projects/assets/components/dsp_comps --only-platform $PLATFORM --mode prep_run_verify;
      fi

.test-assets-misc:
  stage: test
  artifacts:
    paths: []
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build test -d projects/assets/components/misc_comps --$MODEL-platform $PLATFORM
    - >
      if [[ -z $IP ]]; then
        ocpidev run tests -d projects/assets/components/misc_comps --only-platform $PLATFORM --mode prep_run_verify;
      fi

.test-assets-util:
  stage: test
  artifacts:
    paths: []
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build test -d projects/assets/components/util_comps --$MODEL-platform $PLATFORM
    - >
      if [[ -z $IP ]]; then
        ocpidev run tests -d projects/assets/components/util_comps --only-platform $PLATFORM --mode prep_run_verify;
      fi

.test-assets_ts:
  stage: test
  artifacts:
    paths: []
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build test -d projects/assets_ts --$MODEL-platform $PLATFORM
    - >
      if [[ -z $IP ]]; then
        ocpidev run tests -d projects/assets_ts --only-platform $PLATFORM --mode prep_run_verify;
      fi

.test-inactive:
  stage: test
  artifacts:
    paths: []
  script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpidev build test -d projects/inactive --$MODEL-platform $PLATFORM
    - >
      if [[ -z $IP ]]; then
        ocpidev run tests -d projects/inactive --only-platform $PLATFORM --mode prep_run_verify;
      fi


#############
# Platforms #
#############

.centos7:
  extends:
    - .rules-default
  tags:
    - opencpi
    - centos7
    - shell
  variables:
    PLATFORM: 'centos7'
    IMAGE: 'centos:7'

.centos6:
  extends:
    - .rules-default
  tags:
    - opencpi
    - centos6
    - shell
  variables:
    PLATFORM: 'centos6'
    IMAGE: 'centos:6'

.xsim:
  extends:
    - .vivado
    - .rules-default
  variables:
    PLATFORM: 'xsim'
    MODEL: 'hdl'
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[\s*ci\s.*xsim(\s[^\s\]]*)*\]/i
    - if: $CI_COMMIT_MESSAGE =~ /\[\s*ci[^\]]*\]/i
      when: never
    - when: on_success

.isim:
  extends:
    - .vivado
    - .rules-special
  variables:
    PLATFORM: 'isim'
    MODEL: 'hdl'
  rules:
    - if: "$CI_MERGE_REQUEST_ID"
    - if: "$CI_COMMIT_TAG"
    - if: "$CI_COMMIT_BRANCH == 'master'"
    - if: "$CI_COMMIT_BRANCH == 'develop'"
    - if: $CI_COMMIT_MESSAGE =~ /\[\s*ci\s.*isim(\s[^\s\]]*)*\]/i

.xilinx13_3:
  extends:
    - .vivado
    - .rules-default
  variables:
    PLATFORM: 'xilinx13_3'
    HW_PLATFORM: 'zed'
    SW_PLATFORM: 'xilinx13_3'
    IP: '10.0.0.103'
    PORT: '1000'
    MODEL: 'rcc'

.xilinx13_4:
  extends:
    - .vivado
    - .rules-default
  variables:
    PLATFORM: 'xilinx13_4'
    HW_PLATFORM: 'zed'
    SW_PLATFORM: 'xilinx13_4'
    IP: '10.0.0.103'
    PORT: '1000'
    MODEL: 'rcc'

.zed-xilinx13_3:
  extends:
    - .vivado
    - .rules-special
  variables:
    PLATFORM: 'zed'
    HW_PLATFORM: 'zed'
    SW_PLATFORM: 'xilinx13_3'
    IP: '10.0.0.103'
    PORT: '1000'
    MODEL: 'hdl'

.zed-xilinx13_4:
  extends:
    - .vivado
    - .rules-special
  variables:
    PLATFORM: 'zed'
    HW_PLATFORM: 'zed'
    SW_PLATFORM: 'xilinx13_4'
    IP: '10.0.0.103'
    PORT: '1000'
    MODEL: 'hdl'
  rules:
    - if: "$CI_MERGE_REQUEST_ID"
    - if: "$CI_COMMIT_TAG"
    - if: "$CI_COMMIT_BRANCH == 'master'"
    - if: "$CI_COMMIT_BRANCH == 'develop'"
    - if: $CI_COMMIT_MESSAGE =~ /\[\s*ci\s.*zed(\s[^\s\]]*)*\]/i

.matchstiq_z1-xilinx13_3:
  extends:
    - .vivado
    - .rules-special
  variables:
    PLATFORM: 'matchstiq_z1'
    HW_PLATFORM: 'matchstiq_z1'
    SW_PLATFORM: 'xilinx13_3'
    IP: '10.0.0.53'
    PORT: '1000'
    MODEL: 'hdl'
  rules:
    - if: "$CI_MERGE_REQUEST_ID"
    - if: "$CI_COMMIT_TAG"
    - if: "$CI_COMMIT_BRANCH == 'master'"
    - if: "$CI_COMMIT_BRANCH == 'develop'"
    - if: $CI_COMMIT_MESSAGE =~ /\[\s*ci\s.*matchstiq(\s[^\s\]]*)*\]/i

.e3xx:
  rules:
    - if: "$CI_MERGE_REQUEST_ID"
    - if: "$CI_COMMIT_TAG"
    - if: "$CI_COMMIT_BRANCH == 'master'"
    - if: "$CI_COMMIT_BRANCH == 'develop'"
    - if: $CI_COMMIT_MESSAGE =~ /\[\s*ci\s.*e3xx(\s[^\s\]]*)*\]/i


########
# Misc #
########
.standard-artifacts:
  artifacts:
    when: on_success
    expire_in: '3d'
    paths:
      - artifacts-$CI_JOB_STAGE-$CI_JOB_ID.tar

.rules-default:
  rules:
    - when: on_success

.rules-special:
  rules:
    - if: "$CI_MERGE_REQUEST_ID"
    - if: "$CI_COMMIT_TAG"
    - if: "$CI_COMMIT_BRANCH == 'master'"
    - if: "$CI_COMMIT_BRANCH == 'develop'"

.vivado:
  before_script:
    - export HOME=$CI_PROJECT_DIR
    - for f in artifacts*.tar; do if [ -f "$f" ]; then tar -xf "$f";  fi ; done
    - sleep 5
    - echo $(date "+%Y-%m-%d %H:%M:%S") > timestamp.txt
    - cat timestamp.txt
    - ls -lh

.docker:
  tags:
    - docker
  image: $IMAGE

.ocpiremote:
  before_script:
    - export HOME=$CI_PROJECT_DIR
    - for f in artifacts*.tar; do if [ -f "$f" ]; then tar -xf "$f";  fi ; done
    - rm -f artifacts*.tar
    - sleep 5
    - echo $(date "+%Y-%m-%d %H:%M:%S") > timestamp.txt
    - cat timestamp.txt
    - ls -lh
    - source ./cdk/opencpi-setup.sh -e
    - make deploy Platforms=$HW_PLATFORM:$SW_PLATFORM
    - echo "IP- $IP"
    - echo "PORT- $PORT"
    - echo "HW- $HW_PLATFORM"
    - echo "SW- $SW_PLATFORM"
    - ocpiremote load -i $IP -r $PORT -w $HW_PLATFORM -s $SW_PLATFORM
    - ocpiremote start -i $IP
  after_script:
    - source ./cdk/opencpi-setup.sh -e
    - ocpiremote unload -i $IP
    - find -not -type d -newerct "$(< timestamp.txt)" > artifacts-$CI_JOB_ID.txt
    - tar -T artifacts-$CI_JOB_ID.txt -cf artifacts-$CI_JOB_ID.tar
    - ls -lh artifacts-$CI_JOB_ID.tar
